@model Learn_Programming_Malayalam.Helpers.PaginatedList<Learn_Programming_Malayalam.Areas.Admin.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name/email/phone: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Sno
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">FirstName</a>

            </th>
            <th>
                LastName
            </th>
            <th>
                Email
            </th>
            <th>
                Phone
            </th>
            <th>
                Location
            </th>
            <th>
                Company
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Created At</a>

            </th>
            <th>
                Updated At
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Select((value, i) => new { i, value }))

        {
        <tr>
            <td>
                @(item.i  + 1  + (Model.PageIndex - 1) * Learn_Programming_Malayalam.Helpers.PaginatedList<Learn_Programming_Malayalam.Areas.Admin.Models.Student>.PAGESIZE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.Company)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.value.UpdatedAt)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.value.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.value.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.value.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>